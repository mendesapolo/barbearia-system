/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package barbearia.arisol.views;

import barbearia.arisol.dao.UtilizadorDao;
import barbearia.arisol.data_adapter.UtilizadorAdapter;
import barbearia.arisol.models.Utilizador;
import barbearia.arisol.util.GenericMessage;
import java.io.UnsupportedEncodingException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Base64;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author António Apolo
 */
public class UtilizadoraForm extends javax.swing.JDialog {

    private UtilizadorDao utilizadorDao;

    /**
     * Creates new form UtilizadoraForm
     *
     * @param parent
     * @param modal
     */
    public UtilizadoraForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.utilizadorDao = new UtilizadorDao();

        clean();
        listTable();
    }

    public void listTable() {
        this.dataTable.setModel(new UtilizadorAdapter());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        isActiveUser = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        txtTelefone = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        txtDataNascimento = new javax.swing.JFormattedTextField();
        cbType = new javax.swing.JComboBox<>();
        btnClear = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtIdentidade = new javax.swing.JTextField();
        rdActivo = new javax.swing.JRadioButton();
        rdInativo = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        ckAlterPassword = new javax.swing.JCheckBox();
        ckAlterUser = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(11, 55, 123));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Utilizadores");

        txtNome.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtUsername.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtTelefone.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtPassword.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtDataNascimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        txtDataNascimento.setText("dd/mm/aaaa");
        txtDataNascimento.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        cbType.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrador", "Barbeiro" }));
        cbType.setSelectedIndex(1);

        btnClear.setBackground(new java.awt.Color(51, 204, 255));
        btnClear.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnClear.setForeground(new java.awt.Color(255, 255, 255));
        btnClear.setText("Limpar");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(0, 0, 153));
        btnSave.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("Salvar");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(0, 0, 153));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Atualizar");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(204, 0, 0));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDelete.setText("Eliminar");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nome");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Data de Nascimento");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Telefone");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Nome de Utilizador");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Senha");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Tipo de Utilizador");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Nº do BI");

        txtIdentidade.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        isActiveUser.add(rdActivo);
        rdActivo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rdActivo.setForeground(new java.awt.Color(255, 255, 255));
        rdActivo.setSelected(true);
        rdActivo.setText("Activo");
        rdActivo.setOpaque(false);

        isActiveUser.add(rdInativo);
        rdInativo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rdInativo.setForeground(new java.awt.Color(255, 255, 255));
        rdInativo.setText("Inativo");
        rdInativo.setOpaque(false);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/barbearia/arisol/views/assets/icons8-users-16.png"))); // NOI18N

        ckAlterPassword.setForeground(new java.awt.Color(255, 255, 255));
        ckAlterPassword.setText("Alterar Senha?");
        ckAlterPassword.setOpaque(false);
        ckAlterPassword.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ckAlterPasswordStateChanged(evt);
            }
        });

        ckAlterUser.setForeground(new java.awt.Color(255, 255, 255));
        ckAlterUser.setText("Alterar Username?");
        ckAlterUser.setOpaque(false);
        ckAlterUser.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ckAlterUserStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(78, 78, 78)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(txtDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8)
                                .addComponent(txtIdentidade, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7)
                                .addComponent(cbType, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ckAlterPassword)
                                .addComponent(ckAlterUser)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(txtPassword)
                                    .addGap(52, 52, 52)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(rdInativo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(rdActivo, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(43, 43, 43))))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rdActivo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdInativo))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(7, 7, 7)
                                        .addComponent(txtDataNascimento, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtIdentidade, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cbType, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(7, 7, 7)
                                            .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(11, 11, 11)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ckAlterPassword)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ckAlterUser)))
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(229, 246, 255));

        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        dataTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(dataTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clean();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String nome = this.txtNome.getText();
        String dataNascimento = this.txtDataNascimento.getText();
        String identidade = this.txtIdentidade.getText();
        String telefone = this.txtTelefone.getText();
        String username = this.txtUsername.getText();
        String password = new String(this.txtPassword.getPassword());
        String type = (String) this.cbType.getSelectedItem();
        boolean isActivo = this.rdActivo.isSelected();
        try {
            if (!nome.equals("") && !username.equals("") && !identidade.equals("") && !password.equals("")) {
                if (utilizadorDao.findByUsername(username) == null) {
                    boolean biExist = false;
                    for (Utilizador ux : utilizadorDao.findAll()) {
                        if (ux.getIdentidade().equalsIgnoreCase(identidade)) {
                            biExist = true;
                            break;
                        }
                    }
                    if (!biExist) {
//                        String hashPassword = Base64.getEncoder().encodeToString(password.getBytes());
                        String hashPassword = new String(MessageDigest.getInstance("MD5").digest(password.getBytes()));
                        Utilizador u = new Utilizador(nome, telefone, hashPassword, username, identidade, new SimpleDateFormat("dd/MM/yyyy").parse(dataNascimento));
                        u.setType(type)
                                .setActivo(isActivo);

                        utilizadorDao.create(u);
                        listTable();
                        clean();
                        GenericMessage.showSuccess(this);
                    } else {
                        GenericMessage.showAlertMessage(this, "Nº do Bilhete já exite.\nPor favor verifique bem os dados");
                    }
                } else {
                    GenericMessage.showAlertMessage(this, "Nome de Utilizador já exite");
                }
            } else {
                GenericMessage.requiredData(this, "Nome, Username, Nº do BI, e Password");
            }
        } catch (ParseException ex) {
            GenericMessage.showAlertMessage(this, "Data de nascimento inválido");
        } catch (NoSuchAlgorithmException ex) {
            GenericMessage.showAlertMessage(this, "Falhar ao criptografar a senha");
        } catch (Exception ex) {
            GenericMessage.showAlertMessage(this, "Error utf8 encoded");
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int idx = this.dataTable.getSelectedRow();
        if (idx >= 0) {
            if (GenericMessage.confirmDeleteData(this) == JOptionPane.OK_OPTION) {
                Utilizador u = new UtilizadorAdapter().getRow(idx);
                utilizadorDao.delete(u);
                listTable();
                GenericMessage.showSuccessDelete(this);
            }
        } else {
            GenericMessage.showAlertMessage(this, "Selecione um registro na tabela");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int idx = this.dataTable.getSelectedRow();
        if (idx >= 0) {
            String nome = this.txtNome.getText();
            String dataNascimento = this.txtDataNascimento.getText();
            String identidade = this.txtIdentidade.getText();
            String telefone = this.txtTelefone.getText();
            String username = this.txtUsername.getText();
            String password = new String(this.txtPassword.getPassword());
            String type = (String) this.cbType.getSelectedItem();
            boolean isActivo = this.rdActivo.isSelected();

            try {
                if (!nome.equals("") && !username.equals("") && !identidade.equals("")) {
                    Utilizador u = new UtilizadorAdapter().getRow(idx);
                    String usernameAux = u.getUsername();

                    u.setNome(nome)
                            .setDataNascimento(new SimpleDateFormat("dd/MM/yyyy").parse(dataNascimento))
                            .setIdentidade(identidade)
                            .setTelefone(telefone)
                            .setType(type)
                            .setActivo(isActivo);
                    if (ckAlterPassword.isSelected()) {
                        if (!password.equals("")) {
                            String hashPassword = new String(MessageDigest.getInstance("MD5").digest(password.getBytes()));
                            u.setPassword(hashPassword);
                        } else {
                            GenericMessage.requiredData(this, "Password");
                        }
                    }

                    if (this.ckAlterUser.isSelected()) {
                        if (!username.equals("")) {
                            if (utilizadorDao.findByUsername(username) == null) {
                                u.setUsername(username);
                            } else {
                                GenericMessage.showAlertMessage(this, "Nome de Utilizador já exite");
                            }
                        } else {
                            GenericMessage.requiredData(this, "Nome de Utilizador");
                        }
                    }

                    if (this.ckAlterPassword.isSelected() && this.ckAlterUser.isSelected()) {
                        utilizadorDao.update(u);
                    } else if (this.ckAlterPassword.isSelected()) {
                        utilizadorDao.updateWithPassword(u);
                    } else if (this.ckAlterUser.isSelected()) {
                        utilizadorDao.updateWithUsername(u);
                    } else {
                        utilizadorDao.updateNoPasswordNoUsername(u);
                    }

                    listTable();
                    clean();
                    GenericMessage.showSuccessUpdate(this);
                } else {
                    GenericMessage.requiredData(this, "Nome, Username, Nº do BI, e Password");
                }
            } catch (ParseException ex) {
                GenericMessage.showAlertMessage(this, "Data de nascimento inválido");
            } catch (NoSuchAlgorithmException ex) {
                GenericMessage.showAlertMessage(this, "Falhar ao criptografar a senha");
            } catch (Exception ex) {
                GenericMessage.showAlertMessage(this, "Error utf8 encoded");
            }
        } else {
            GenericMessage.showAlertMessage(this, "Selecione um registro na tabela");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void dataTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataTableMouseClicked
        int idx = this.dataTable.getSelectedRow();
        if (idx >= 0) {
            try {
                Utilizador u = new UtilizadorAdapter().getRow(idx);
                SimpleDateFormat formatDate = new SimpleDateFormat("dd/MM/yyyy");

                this.txtNome.setText(u.getNome());
                this.txtDataNascimento.setText(formatDate.format(u.getDataNascimento()));
                this.txtIdentidade.setText(u.getIdentidade());
                this.txtUsername.setText(u.getUsername());
                this.txtTelefone.setText(u.getTelefone());
//                this.txtPassword.setText(u.getPassword());
                this.txtPassword.setText("");
                this.cbType.setSelectedItem(u.getType());
                this.rdActivo.setSelected(u.isActivo());
                this.rdInativo.setSelected(!u.isActivo());

                if (this.ckAlterPassword.isSelected()) {
                    this.txtPassword.setEnabled(true);
                    this.txtPassword.setText("");
                } else {
                    this.txtPassword.setEnabled(false);
                }

                if (this.ckAlterUser.isSelected()) {
                    this.ckAlterUser.setEnabled(true);
                    this.txtPassword.setText("");
                } else {
                    this.txtUsername.setEnabled(false);
                }

                this.btnSave.setEnabled(false);
                this.btnUpdate.setEnabled(true);
                this.btnDelete.setEnabled(true);
            } catch (Exception ex) {
                ex.printStackTrace();
                GenericMessage.showAlertMessage(this, "Erro do sistema!!");
            }
        }
    }//GEN-LAST:event_dataTableMouseClicked

    private void ckAlterPasswordStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ckAlterPasswordStateChanged
        if (this.ckAlterPassword.isSelected()) {
            this.txtPassword.setEnabled(true);
            int idx = this.dataTable.getSelectedRow();
            if (idx >= 0) {
                try {
                    Utilizador u = new UtilizadorAdapter().getRow(idx);
                    this.txtUsername.setText(u.getUsername());
                } catch (Exception ex) {
                    System.out.println("No seleted");
                }
            }
        } else {
            this.txtPassword.setEnabled(false);
        }
    }//GEN-LAST:event_ckAlterPasswordStateChanged

    private void ckAlterUserStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ckAlterUserStateChanged
        if (this.ckAlterUser.isSelected()) {
            this.txtUsername.setEnabled(true);
            int idx = this.dataTable.getSelectedRow();
            if (idx >= 0) {
                try {
                    Utilizador u = new UtilizadorAdapter().getRow(idx);
                    this.txtUsername.setText(u.getUsername());
                } catch (Exception ex) {
                    System.out.println("No seleted");
                }
            }
        } else {
            this.txtUsername.setEnabled(false);
        }
    }//GEN-LAST:event_ckAlterUserStateChanged

    public void clean() {
        this.txtNome.setText("");
        this.txtDataNascimento.setText("dd/mm/aaaa");
        this.txtIdentidade.setText("");
        this.txtUsername.setText("");
        this.txtTelefone.setText("");
        this.txtPassword.setText("");
        this.cbType.setSelectedIndex(1);
        this.rdActivo.setSelected(true);

        this.btnSave.setEnabled(true);
        this.btnUpdate.setEnabled(false);
        this.btnDelete.setEnabled(false);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UtilizadoraForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UtilizadoraForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UtilizadoraForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UtilizadoraForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            UtilizadoraForm dialog = new UtilizadoraForm(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbType;
    private javax.swing.JCheckBox ckAlterPassword;
    private javax.swing.JCheckBox ckAlterUser;
    private javax.swing.JTable dataTable;
    private javax.swing.ButtonGroup isActiveUser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rdActivo;
    private javax.swing.JRadioButton rdInativo;
    private javax.swing.JFormattedTextField txtDataNascimento;
    private javax.swing.JTextField txtIdentidade;
    private javax.swing.JTextField txtNome;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtTelefone;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
